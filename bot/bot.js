const express = require('express');
const path = require('path');
const TelegramBot = require('node-telegram-bot-api');

// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏ Chat ID –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const TOKEN = process.env.TOKEN || '8345921861:AAGdxBroNKkBXDMjkJO7YgO1vUyBgDCb8N8';
const CHAT_ID = process.env.CHAT_ID || '1937410406';

// –°–æ–∑–¥–∞–µ–º Express —Å–µ—Ä–≤–µ—Ä
const app = express();

// Middleware
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã - —É–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å
app.use(express.static(path.join(__dirname, '../public')));

// API endpoint –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
app.post('/api/send-message', async (req, res) => {
    try {
        const { text } = req.body;
        
        if (!text) {
            return res.status(400).json({ success: false, error: '–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' });
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ª–∏ –±–æ—Ç
        if (TOKEN !== 'YOUR_BOT_TOKEN_HERE' && CHAT_ID !== 'YOUR_CHAT_ID_HERE') {
            try {
                const bot = new TelegramBot(TOKEN, { polling: false });
                const message = `üíå –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –º–æ–µ–π –ª—é–±–∏–º–æ–π:\n\n"${text}"\n\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å —Å–∞–π—Ç–∞ –≥–æ–¥–æ–≤—â–∏–Ω—ã ‚ù§Ô∏è`;
                await bot.sendMessage(CHAT_ID, message);
                res.json({ success: true, message: '–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!' });
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
                res.status(500).json({ success: false, error: error.message });
            }
        } else {
            // –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ Telegram
            res.json({ success: true, message: '–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ (Telegram –æ—Ç–∫–ª—é—á–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)' });
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        res.status(500).json({ success: false, error: error.message });
    }
});

// –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, '../public/index.html'));
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = process.env.PORT || 3000;
app.listen(PORT, '0.0.0.0', () => {
    console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    console.log(`–û—Ç–∫—Ä–æ–π –≤ –±—Ä–∞—É–∑–µ—Ä–µ: http://localhost:${PORT}`);
});
